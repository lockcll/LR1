from collections import Counter
import csv

def analyze_log(path_to_file):  
    # Проверка имеет ли файл необходимое расширение
    if path_to_file.endswith(".csv"):
        try:
            # Создание списка для заказов
            orders = ""
            # Открытие для чтения 
            with open(path_to_file, "r") as file:
                # Ожидаемые имена столбцов
                keys = ["name", "order", "weekday"]
                # Считывание дыннах
                *orders, = csv.DictReader(file, fieldnames=keys)
            
            # Вызов функции анализа и сохрание результата 
            res1 = most_ordered(orders, 'Maria')[0][0]  
            res2 = most_ordered_qty(orders, 'arnaldo', 'hamburguer') 
            res3 = never_ordered(orders, 'joao') 
            res4 = never_go(orders, 'joao') 
            # Запись результата
            with open("data/mkt_campaign.txt", "w") as file:
                file.write(f"{res1}\n{res2}\n{res3}\n{res4}")
        except FileNotFoundError:
            # Файл не найден 
            raise FileNotFoundError(f"Arquivo inexistente: '{path_to_file}'")
    else:
        # Неверное расширение
        raise FileNotFoundError(f"Extensão inválida: '{path_to_file}'")

def most_ordered(orders, name):
    # Получение товаров заказанных клиентом
    items = [order["order"] for order in orders if order["name"] == name.lower()]
    # Подсчет количества и вывод самого распространенного
    result = Counter(items).most_common()
    return result

def most_ordered_qty(orders, name, product):
    # Получение товара наиболее часто заказываемого клиентом
    items = most_ordered(orders, name)
    # Возрат количетсва заказываемого товара 
    for item in items:
        if item[0] == product.lower():
            return item[1]

def never_ordered(orders, name):
    # Поиск набора товаров заказываемых данным клиентом 
    personal = most_ordered(orders, name)
    personal_set = {item[0] for item in personal}
    orders_order = [order["order"] for order in orders]
    total = Counter(orders_order).most_common()
    total_set = {item[0] for item in total}
    # Возрат того что клиент никогда не заказывал
    return total_set - personal_set

def never_go(orders, name):
    # Получение дней в которые клиет почещал заведение 
    personal_weekday = [order["weekday"] for order in orders if order["name"] == name.lower()]
    personal = Counter(personal_weekday).most_common()
    personal_set = {item[0] for item in personal}
    orders_order = [order["weekday"] for order in orders]
    total = Counter(orders_order).most_common()
    total_set = {item[0] for item in total}
    # Возрат дней в которые клиент не посещал заведение
    return total_set - personal_set